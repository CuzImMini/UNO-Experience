import Foundationimport osimport SwiftUIstruct GameEngine {        //Logger für Konsole    let log = Logger()        //Variable für Zugriff auf den Session-Vermittler    private var sessionHandler: MP_Session            //Spielvariablen    var activeCard: Cards = .BLUE_ONE    var cardDeck: [Card] = []    var hasDrawn: Bool = false    var hasPlayed: Bool = true        var lastDeckCount: Int?        //aktuelle Ansicht auf Gerät...    var viewState: ViewStates = .mainMenu        var winnerName: String?        //Initializer    init(sessionHandler: MP_Session) {        self.sessionHandler = sessionHandler    }            func requestDraw(amount: Int) {        self.sessionHandler.sendTraffic(recipient: TargetNames.host.rawValue , prefix: TrafficTypes.cardActionIdentifier.rawValue, packet1: CardActions.requestCard.rawValue, packet2: String(amount))            }        mutating func startGame() {        self.viewState = .inGame    }            mutating func cancelGame() {        self.viewState = .mainMenu            }        mutating func changeCard(cardRawValue: String, announce: Bool) {        var cardToChangeTo: Cards = .BLUE_ONE                for card in Cards.allCases {            if cardRawValue == card.rawValue {                cardToChangeTo = card            }        }                    self.activeCard = cardToChangeTo                    }        mutating func winHandler() {        sessionHandler.sendTraffic(recipient: TargetNames.allDevices.rawValue , prefix: TrafficTypes.gameActionIdentifier.rawValue, packet1: GameActions.win.rawValue, packet2: "")        self.viewState = .win            }        mutating func looseHandler(opponentName: String) {        self.winnerName = opponentName        self.viewState = .loose            }        mutating func playerAnnouncement() {        self.hasPlayed = false    }        }